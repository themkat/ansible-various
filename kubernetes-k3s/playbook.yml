---
# TODO: any way we can run this playbook to upgrade if updates are available?
#       Or is that better solved in other ways?
# TODO: should we set up a private registry as well? docker-registry?
- name: Setup main k3s server
  hosts: server
  become: true

  tasks:
    # TODO: how to send the config to the server? any things we can read from the docker registry service? set up here in files somehow? 
    # set up docker registry
    # TODO: is this optimal if we don't use docker for k3s? (containerd instead). 
    # - name: Install Docker registry
    #   package:
    #     name:
    #       - docker
    #       - docker-registry
    #     state: present

    # - name: Make sure Docker registry is running
    #   service:
    #     name: docker-registry
    #     state: started
    #     enabled: true

    # Set up k3s master
    # TODO: see if this can be rewritten in a clean way with get_url and command/script
    - name: Install k3s
      shell: >
        curl -sfL https://get.k3s.io | sh -
      args:
        creates: /usr/local/bin/k3s
      environment:
        INSTALL_K3S_NAME: server
        K3S_KUBECONFIG_MODE: 644
        K3S_NODE_NAME: main
      tags:
        - skip_ansible_lint

    - name: Make sure k3s is active
      service:
        name: k3s-server
        state: started
        enabled: true

    # TODO: any more k8s config?

    - name: Save server hostname for later use
      set_fact:
        # can't use from hostvars in other plays
        k3s_server: "{{ ansible_host }}"

    - name: Save access token to be able to set up workers later
      slurp:
        src: /var/lib/rancher/k3s/server/node-token
      register: k3s_token

    # TODO: any better way to do this? any access policy ctl program to use?
    # TODO: now we have to do manual work to get it 
    - name: Fetch k3s file to easily be able to connect
      fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: k3s-config


- name: Set up k3s worker node
  hosts: worker
  become: true

  tasks:
    # TODO: actually make it fail it shell command fails...
    #       now it just say changed and does nothing
    - name: Install k3s (as a worker/agent)
      shell: >
        curl -sfL https://get.k3s.io | sh -
      args:
        creates: /usr/local/bin/k3s
      environment:
        # TODO: any clever ways to make unique names for the workers here?
        INSTALL_K3S_NAME: worker
        K3S_NODE_NAME: "worker-{{ groups['worker'].index(inventory_hostname) }}"
        K3S_URL: "https://{{ hostvars[groups['server'][0]]['k3s_server'] }}:6443"
        K3S_TOKEN: "{{ hostvars[groups['server'][0]]['k3s_token']['content'] | b64decode | trim }}"
      tags:
        - skip_ansible_lint

    - name: Make sure k3s is active
      service:
        name: k3s-worker
        state: started
        enabled: true
